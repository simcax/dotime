name: Lint and Build

on: 
  push:
    paths:
      - '!sql/**'
      - 'dotime/**'
      - '.github/workflows/pylint.yml'
      - 'requirements.txt'
      - 'Dockerfile'
      - 'test_*.py'

jobs:
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
        redis-version: ["6.2"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install build-essential -y
        python -m pip install --upgrade pip
        python -m pip install ruff
        python -m pip install -r requirements.txt
    - name: Analysing the code with ruff
      run: |
        ruff check
    - name: Run cockroach db single node cluster
      run: | 
        docker run -d --name=roachtest --hostname=roachtest -p 26257:26257 -p 8085:8080 -v "${PWD}/cockroach-data/roach1:/cockroach/cockroach-data" cockroachdb/cockroach:v21.2.2 start-single-node --insecure
    - name: Create unit test database
      run: |
        docker ps
        sudo apt-get install -y wget
        export DB_PASSWORD=
        export DB_USERNAME=root
        export DB_NAME=dotimetest
        export DB_HOST=localhost
        export DB_SSL_MODE=disable
        export DB_SSL=false
        export DB_ROOT_CERT_PATH=/tmp/.postgresql/root.crt
        curl https://binaries.cockroachdb.com/cockroach-v21.2.2.linux-amd64.tgz | tar -xz && sudo cp -i cockroach-v21.2.2.linux-amd64/cockroach /usr/local/bin/
        cockroach sql --url "postgresql://root@localhost:26257/defaultdb?sslmode=disable" --execute "CREATE DATABASE ${DB_NAME}"
        cockroach sql --url "postgresql://root@localhost:26257/defaultdb?sslmode=disable" --execute "SHOW DATABASES"
        wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/8.2.1/flyway-commandline-8.2.1-linux-x64.tar.gz | tar xvz && sudo ln -s `pwd`/flyway-8.2.1/flyway /usr/local/bin 
        cd database
        flyway info
        flyway migrate 
        flyway info
    - name: Start Redis v${{ matrix.redis-version }}
      uses: superchargejs/redis-github-action@1.2.0
      with:
        redis-version: ${{ matrix.redis-version }}
    - name: Testing the code with pytest
      run: |
        ls dotime
        coverage run -m pytest --ignore=cockroach-data 
        coverage html
        rm coverage.svg
        git config --global user.name "Carsten Skov"
        git config --global user.email "carsten@simcax.dk"
        git add coverage.svg
        git commit -m "Deleted coverage SVG in order to update it"
        coverage-badge -o coverage.svg
        git add coverage.svg
        git commit -m "Added updated coverage SVG"
        git push
  docker:
    needs: pylint
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: simcax/dotime:${{ secrets.MAJOR_VERSION }}.${{ secrets.FEATURE_VERSION }}.${{ github.run_number}}
    